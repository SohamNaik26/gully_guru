"""add_rejected_status_to_auction

Revision ID: edc2c02b414a
Revises: dec481882462
Create Date: 2025-03-19 18:01:06.247452

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "edc2c02b414a"
down_revision: Union[str, None] = "dec481882462"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # First create the enum type if it doesn't exist
    op.execute(
        """
        DO $$ 
        BEGIN
            IF NOT EXISTS (SELECT 1 FROM pg_type WHERE typname = 'auction_status') THEN
                CREATE TYPE auction_status AS ENUM ('pending', 'bidding', 'completed');
            END IF;
        END $$;
    """
    )

    # Then add the new value if it doesn't exist
    op.execute("ALTER TYPE auction_status ADD VALUE IF NOT EXISTS 'rejected'")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # Note: PostgreSQL does not support removing enum values
    # This is a one-way migration
    pass
    # ### end Alembic commands ###
