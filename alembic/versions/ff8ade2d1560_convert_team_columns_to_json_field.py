"""Convert team columns to JSON field

Revision ID: ff8ade2d1560
Revises: 9fa3ac97a8f1
Create Date: 2025-03-21 16:13:53.260726

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "ff8ade2d1560"
down_revision: Union[str, None] = "9fa3ac97a8f1"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # First add the JSON column
    op.add_column(
        "ipl_balanced_rounds", sa.Column("team_matches", sa.JSON(), nullable=True)
    )

    # Migrate data from individual columns to JSON
    op.execute(
        """
    UPDATE ipl_balanced_rounds
    SET team_matches = jsonb_build_object(
        'MI', mi_matches,
        'CSK', csk_matches,
        'RCB', rcb_matches,
        'KKR', kkr_matches,
        'DC', dc_matches,
        'SRH', srh_matches,
        'PBKS', pbks_matches,
        'RR', rr_matches,
        'GT', gt_matches,
        'LSG', lsg_matches
    )
    WHERE mi_matches IS NOT NULL 
       OR csk_matches IS NOT NULL
       OR rcb_matches IS NOT NULL
       OR kkr_matches IS NOT NULL
       OR dc_matches IS NOT NULL
       OR srh_matches IS NOT NULL
       OR pbks_matches IS NOT NULL
       OR rr_matches IS NOT NULL
       OR gt_matches IS NOT NULL
       OR lsg_matches IS NOT NULL
    """
    )

    # Set default empty JSON object for any NULL values
    op.execute(
        """
    UPDATE ipl_balanced_rounds 
    SET team_matches = '{}'::jsonb 
    WHERE team_matches IS NULL
    """
    )

    # Make the column not nullable
    op.alter_column("ipl_balanced_rounds", "team_matches", nullable=False)

    # Now drop the individual columns
    op.drop_column("ipl_balanced_rounds", "lsg_matches")
    op.drop_column("ipl_balanced_rounds", "rcb_matches")
    op.drop_column("ipl_balanced_rounds", "srh_matches")
    op.drop_column("ipl_balanced_rounds", "gt_matches")
    op.drop_column("ipl_balanced_rounds", "csk_matches")
    op.drop_column("ipl_balanced_rounds", "rr_matches")
    op.drop_column("ipl_balanced_rounds", "mi_matches")
    op.drop_column("ipl_balanced_rounds", "pbks_matches")
    op.drop_column("ipl_balanced_rounds", "kkr_matches")
    op.drop_column("ipl_balanced_rounds", "dc_matches")

    # Update foreign key constraint
    op.drop_constraint(
        "fk_ipl_matches_game_round", "ipl_matches_schedule", type_="foreignkey"
    )
    op.create_foreign_key(
        None, "ipl_matches_schedule", "ipl_balanced_rounds", ["game_round_id"], ["id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, "ipl_matches_schedule", type_="foreignkey")
    op.create_foreign_key(
        "fk_ipl_matches_game_round",
        "ipl_matches_schedule",
        "ipl_balanced_rounds",
        ["game_round_id"],
        ["id"],
        ondelete="SET NULL",
    )

    # Add back the individual columns
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("dc_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("kkr_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("pbks_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("mi_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("rr_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("csk_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("gt_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("srh_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("rcb_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )
    op.add_column(
        "ipl_balanced_rounds",
        sa.Column("lsg_matches", sa.INTEGER(), autoincrement=False, nullable=True),
    )

    # Migrate data back from JSON to individual columns
    op.execute(
        """
    UPDATE ipl_balanced_rounds 
    SET mi_matches = (team_matches->>'MI')::integer,
        csk_matches = (team_matches->>'CSK')::integer,
        rcb_matches = (team_matches->>'RCB')::integer,
        kkr_matches = (team_matches->>'KKR')::integer,
        dc_matches = (team_matches->>'DC')::integer,
        srh_matches = (team_matches->>'SRH')::integer,
        pbks_matches = (team_matches->>'PBKS')::integer,
        rr_matches = (team_matches->>'RR')::integer,
        gt_matches = (team_matches->>'GT')::integer,
        lsg_matches = (team_matches->>'LSG')::integer
    WHERE team_matches IS NOT NULL
    """
    )

    # Drop the JSON column
    op.drop_column("ipl_balanced_rounds", "team_matches")
    # ### end Alembic commands ###
