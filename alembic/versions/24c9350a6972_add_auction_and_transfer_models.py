"""Add auction and transfer models

Revision ID: 24c9350a6972
Revises: f2f5e660a9c2
Create Date: 2025-03-13 13:57:52.247894

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "24c9350a6972"
down_revision: Union[str, None] = "f2f5e660a9c2"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "transfer_market",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("gully_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("fair_price", sa.Numeric(), nullable=False),
        sa.Column("listed_at", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["gully_id"],
            ["gullies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_transfer_market_gully_id"),
        "transfer_market",
        ["gully_id"],
        unique=False,
    )
    op.create_index(
        "ix_transfer_market_gully_listed",
        "transfer_market",
        ["gully_id", "listed_at"],
        unique=False,
    )
    op.create_index(
        op.f("ix_transfer_market_player_id"),
        "transfer_market",
        ["player_id"],
        unique=False,
    )
    op.create_table(
        "auction_queue",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("gully_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("seller_participant_id", sa.Integer(), nullable=True),
        sa.Column("auction_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("listed_at", sa.DateTime(timezone=True), nullable=False),
        sa.CheckConstraint(
            "auction_type IN ('new_player', 'transfer')", name="ck_auction_type"
        ),
        sa.CheckConstraint(
            "status IN ('pending', 'bidding', 'completed')", name="ck_auction_status"
        ),
        sa.ForeignKeyConstraint(
            ["gully_id"],
            ["gullies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.id"],
        ),
        sa.ForeignKeyConstraint(
            ["seller_participant_id"],
            ["gully_participants.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_auction_queue_gully_id"), "auction_queue", ["gully_id"], unique=False
    )
    op.create_index(
        "ix_auction_queue_gully_status",
        "auction_queue",
        ["gully_id", "status"],
        unique=False,
    )
    op.create_index(
        op.f("ix_auction_queue_player_id"), "auction_queue", ["player_id"], unique=False
    )
    op.create_index(
        op.f("ix_auction_queue_seller_participant_id"),
        "auction_queue",
        ["seller_participant_id"],
        unique=False,
    )
    op.create_table(
        "bank_transactions",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("gully_id", sa.Integer(), nullable=False),
        sa.Column("player_id", sa.Integer(), nullable=False),
        sa.Column("seller_participant_id", sa.Integer(), nullable=False),
        sa.Column("sale_price", sa.Numeric(), nullable=False),
        sa.Column("sale_time", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["gully_id"],
            ["gullies.id"],
        ),
        sa.ForeignKeyConstraint(
            ["player_id"],
            ["players.id"],
        ),
        sa.ForeignKeyConstraint(
            ["seller_participant_id"],
            ["gully_participants.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_bank_transactions_gully_id"),
        "bank_transactions",
        ["gully_id"],
        unique=False,
    )
    op.create_index(
        "ix_bank_transactions_gully_time",
        "bank_transactions",
        ["gully_id", "sale_time"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bank_transactions_player_id"),
        "bank_transactions",
        ["player_id"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bank_transactions_seller_participant_id"),
        "bank_transactions",
        ["seller_participant_id"],
        unique=False,
    )
    op.create_table(
        "bids",
        sa.Column("created_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("auction_queue_id", sa.Integer(), nullable=False),
        sa.Column("gully_participant_id", sa.Integer(), nullable=False),
        sa.Column("bid_amount", sa.Numeric(), nullable=False),
        sa.Column("bid_time", sa.DateTime(timezone=True), nullable=False),
        sa.ForeignKeyConstraint(
            ["auction_queue_id"],
            ["auction_queue.id"],
        ),
        sa.ForeignKeyConstraint(
            ["gully_participant_id"],
            ["gully_participants.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "auction_queue_id",
            "gully_participant_id",
            name="uq_bid_auction_participant",
        ),
    )
    op.create_index(
        "ix_bids_auction_amount",
        "bids",
        ["auction_queue_id", "bid_amount"],
        unique=False,
    )
    op.create_index(
        op.f("ix_bids_auction_queue_id"), "bids", ["auction_queue_id"], unique=False
    )
    op.create_index(
        op.f("ix_bids_gully_participant_id"),
        "bids",
        ["gully_participant_id"],
        unique=False,
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_bids_gully_participant_id"), table_name="bids")
    op.drop_index(op.f("ix_bids_auction_queue_id"), table_name="bids")
    op.drop_index("ix_bids_auction_amount", table_name="bids")
    op.drop_table("bids")
    op.drop_index(
        op.f("ix_bank_transactions_seller_participant_id"),
        table_name="bank_transactions",
    )
    op.drop_index(
        op.f("ix_bank_transactions_player_id"), table_name="bank_transactions"
    )
    op.drop_index("ix_bank_transactions_gully_time", table_name="bank_transactions")
    op.drop_index(op.f("ix_bank_transactions_gully_id"), table_name="bank_transactions")
    op.drop_table("bank_transactions")
    op.drop_index(
        op.f("ix_auction_queue_seller_participant_id"), table_name="auction_queue"
    )
    op.drop_index(op.f("ix_auction_queue_player_id"), table_name="auction_queue")
    op.drop_index("ix_auction_queue_gully_status", table_name="auction_queue")
    op.drop_index(op.f("ix_auction_queue_gully_id"), table_name="auction_queue")
    op.drop_table("auction_queue")
    op.drop_index(op.f("ix_transfer_market_player_id"), table_name="transfer_market")
    op.drop_index("ix_transfer_market_gully_listed", table_name="transfer_market")
    op.drop_index(op.f("ix_transfer_market_gully_id"), table_name="transfer_market")
    op.drop_table("transfer_market")
    # ### end Alembic commands ###
