"""update_models_with_fixes

Revision ID: f0f405d85f27
Revises: ab63dc35cf0a
Create Date: 2025-03-11 12:38:14.402022

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "f0f405d85f27"
down_revision: Union[str, None] = "ab63dc35cf0a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("player_stats")

    # Add status column as nullable first
    op.add_column(
        "gullies",
        sa.Column("status", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    )

    # Update existing rows to set status to 'pending'
    op.execute("UPDATE gullies SET status = 'pending'")

    # Now make the column non-nullable
    op.alter_column("gullies", "status", nullable=False)

    op.create_index(op.f("ix_gullies_status"), "gullies", ["status"], unique=False)
    op.create_unique_constraint(
        "uq_user_gully", "gully_participants", ["user_id", "gully_id"]
    )
    op.drop_index("ix_user_players_player_id", table_name="user_players")
    op.create_index(
        op.f("ix_user_players_player_id"), "user_players", ["player_id"], unique=False
    )
    op.create_unique_constraint(
        "uq_player_gully", "user_players", ["player_id", "gully_id"]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("uq_player_gully", "user_players", type_="unique")
    op.drop_index(op.f("ix_user_players_player_id"), table_name="user_players")
    op.create_index(
        "ix_user_players_player_id", "user_players", ["player_id"], unique=True
    )
    op.drop_constraint("uq_user_gully", "gully_participants", type_="unique")
    op.drop_index(op.f("ix_gullies_status"), table_name="gullies")
    op.drop_column("gullies", "status")
    op.create_table(
        "player_stats",
        sa.Column(
            "created_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column(
            "updated_at",
            postgresql.TIMESTAMP(timezone=True),
            autoincrement=False,
            nullable=False,
        ),
        sa.Column("id", sa.INTEGER(), autoincrement=True, nullable=False),
        sa.Column("player_id", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("matches_played", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("runs", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("wickets", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("highest_score", sa.INTEGER(), autoincrement=False, nullable=False),
        sa.Column("best_bowling", sa.VARCHAR(), autoincrement=False, nullable=False),
        sa.Column(
            "fantasy_points",
            sa.DOUBLE_PRECISION(precision=53),
            autoincrement=False,
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["player_id"], ["players.id"], name="player_stats_player_id_fkey"
        ),
        sa.PrimaryKeyConstraint("id", name="player_stats_pkey"),
    )
    # ### end Alembic commands ###
