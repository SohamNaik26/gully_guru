"""Add IPL balanced rounds table

Revision ID: 9fa3ac97a8f1
Revises: 7cd20af9b351
Create Date: 2025-03-21 16:04:51.724679

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = "9fa3ac97a8f1"
down_revision: Union[str, None] = "7cd20af9b351"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # First check if the table exists and drop it if it does
    # Since we're recreating it from scratch with the new schema
    op.execute("DROP TABLE IF EXISTS ipl_balanced_rounds CASCADE")

    # Create the table from scratch with all columns
    op.create_table(
        "ipl_balanced_rounds",
        sa.Column("id", sa.Integer(), nullable=False, autoincrement=True),
        sa.Column("round_number", sa.Integer(), nullable=False),
        sa.Column("season", sa.Integer(), nullable=False),
        sa.Column("start_match", sa.Integer(), nullable=False),
        sa.Column("end_match", sa.Integer(), nullable=False),
        sa.Column("matches_in_round", sa.Integer(), nullable=False),
        sa.Column("min_team_matches", sa.Integer(), nullable=False),
        sa.Column("max_team_matches", sa.Integer(), nullable=False),
        sa.Column("is_balanced", sa.Boolean(), nullable=False),
        sa.Column("mi_matches", sa.Integer(), nullable=True),
        sa.Column("csk_matches", sa.Integer(), nullable=True),
        sa.Column("rcb_matches", sa.Integer(), nullable=True),
        sa.Column("kkr_matches", sa.Integer(), nullable=True),
        sa.Column("dc_matches", sa.Integer(), nullable=True),
        sa.Column("srh_matches", sa.Integer(), nullable=True),
        sa.Column("pbks_matches", sa.Integer(), nullable=True),
        sa.Column("rr_matches", sa.Integer(), nullable=True),
        sa.Column("gt_matches", sa.Integer(), nullable=True),
        sa.Column("lsg_matches", sa.Integer(), nullable=True),
        sa.Column("start_date_utc", sa.DateTime(), nullable=True),
        sa.Column("end_date_utc", sa.DateTime(), nullable=True),
        sa.Column("days_in_round", sa.Integer(), nullable=True),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("round_number", "season", name="uix_round_season"),
    )

    op.create_index(
        op.f("ix_ipl_balanced_rounds_round_number"),
        "ipl_balanced_rounds",
        ["round_number"],
        unique=False,
    )

    op.create_index(
        op.f("ix_ipl_balanced_rounds_season"),
        "ipl_balanced_rounds",
        ["season"],
        unique=False,
    )

    # Add foreign key to IPLMatch table
    op.add_column(
        "ipl_matches_schedule", sa.Column("game_round_id", sa.Integer(), nullable=True)
    )

    op.create_foreign_key(
        "fk_ipl_matches_game_round",
        "ipl_matches_schedule",
        "ipl_balanced_rounds",
        ["game_round_id"],
        ["id"],
        ondelete="SET NULL",
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(
        "fk_ipl_matches_game_round", "ipl_matches_schedule", type_="foreignkey"
    )
    op.drop_column("ipl_matches_schedule", "game_round_id")
    op.drop_index(
        op.f("ix_ipl_balanced_rounds_season"), table_name="ipl_balanced_rounds"
    )
    op.drop_index(
        op.f("ix_ipl_balanced_rounds_round_number"), table_name="ipl_balanced_rounds"
    )
    op.drop_table("ipl_balanced_rounds")
    # ### end Alembic commands ###
