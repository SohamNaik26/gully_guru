"""add_has_submitted_squad_to_gully_participants

Revision ID: 63a1d46bdfbb
Revises: 24c9350a6972
Create Date: 2025-03-13 18:00:57.802018

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = "63a1d46bdfbb"
down_revision: Union[str, None] = "24c9350a6972"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Create the ParticipantRole enum type
    participant_role_enum = postgresql.ENUM("member", "admin", name="participantrole")
    participant_role_enum.create(op.get_bind())

    # Add the has_submitted_squad and submission_time columns as nullable first
    op.add_column(
        "gully_participants",
        sa.Column("has_submitted_squad", sa.Boolean(), nullable=True),
    )
    op.add_column(
        "gully_participants",
        sa.Column("submission_time", sa.DateTime(timezone=True), nullable=True),
    )

    # Set default values for existing rows
    op.execute(
        "UPDATE gully_participants SET has_submitted_squad = FALSE WHERE has_submitted_squad IS NULL"
    )

    # Now make has_submitted_squad not nullable
    op.alter_column("gully_participants", "has_submitted_squad", nullable=False)

    # Convert the existing role column to use the enum type
    # First, create a temporary column with the enum type
    op.add_column(
        "gully_participants",
        sa.Column("role_enum", participant_role_enum, nullable=True),
    )

    # Copy data from the old column to the new one
    op.execute("UPDATE gully_participants SET role_enum = role::participantrole")

    # Drop the old column and rename the new one
    op.drop_column("gully_participants", "role")
    op.alter_column("gully_participants", "role_enum", new_column_name="role")

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###

    # Convert the role column back to a string type
    # First, create a temporary column with string type
    op.add_column(
        "gully_participants", sa.Column("role_str", sa.String(), nullable=True)
    )

    # Copy data from the enum column to the string one
    op.execute("UPDATE gully_participants SET role_str = role::text")

    # Drop the enum column and rename the string one
    op.drop_column("gully_participants", "role")
    op.alter_column("gully_participants", "role_str", new_column_name="role")

    # Drop the has_submitted_squad and submission_time columns
    op.drop_column("gully_participants", "submission_time")
    op.drop_column("gully_participants", "has_submitted_squad")

    # Drop the ParticipantRole enum type
    op.execute("DROP TYPE participantrole")

    # ### end Alembic commands ###
