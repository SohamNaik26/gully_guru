---
description: Naming standards and conventions for consistent code
globs: ["**/*.py", "**/*.sql"]
---

# Naming Conventions

## Python Naming Conventions

- **Variables and Functions**: Use `snake_case`
  ```python
  # ✅ Good
  player_name = "Virat Kohli"
  def calculate_score(runs, wickets):
      pass
  
  # ❌ Bad
  playerName = "Virat Kohli"
  def CalculateScore(runs, wickets):
      pass
  ```

- **Classes**: Use `PascalCase`
  ```python
  # ✅ Good
  class PlayerStats:
      pass
  
  # ❌ Bad
  class player_stats:
      pass
  ```

- **Constants**: Use `UPPER_CASE`
  ```python
  # ✅ Good
  MAX_PLAYERS = 18
  DEFAULT_BUDGET = 100.0
  
  # ❌ Bad
  maxPlayers = 18
  default_budget = 100.0
  ```

- **Private Methods/Variables**: Prefix with underscore
  ```python
  # ✅ Good
  def _validate_squad(self):
      pass
  _internal_counter = 0
  
  # ❌ Bad
  def privateMethod(self):
      pass
  ```

## Database Naming Conventions

- **Tables**: Use plural nouns in `snake_case`
  ```sql
  -- ✅ Good
  CREATE TABLE players (
      player_id SERIAL PRIMARY KEY
  );
  
  -- ❌ Bad
  CREATE TABLE Player (
      PlayerID SERIAL PRIMARY KEY
  );
  ```

- **Columns**: Use `snake_case`
  ```sql
  -- ✅ Good
  ALTER TABLE players ADD COLUMN first_name TEXT;
  
  -- ❌ Bad
  ALTER TABLE players ADD COLUMN FirstName TEXT;
  ```

- **Primary Keys**: Use `id` or `<table_name_singular>_id`
  ```sql
  -- ✅ Good
  CREATE TABLE matches (
      match_id SERIAL PRIMARY KEY
  );
  
  -- ❌ Bad
  CREATE TABLE matches (
      MatchID SERIAL PRIMARY KEY
  );
  ```

- **Foreign Keys**: Use `<referenced_table_singular>_id`
  ```sql
  -- ✅ Good
  CREATE TABLE user_squads (
      user_id INTEGER REFERENCES users(id)
  );
  
  -- ❌ Bad
  CREATE TABLE user_squads (
      UserRef INTEGER REFERENCES users(id)
  );
  ```

## API Endpoint Naming

- **Use Nouns**: Represent resources, not actions
  ```
  # ✅ Good
  /api/players
  /api/matches
  
  # ❌ Bad
  /api/getPlayers
  /api/fetchMatches
  ```

- **Use Plural**: For collection endpoints
  ```
  # ✅ Good
  /api/players
  /api/matches
  
  # ❌ Bad
  /api/player
  /api/match
  ```

- **Use Kebab-Case**: For multi-word resources
  ```
  # ✅ Good
  /api/player-stats
  /api/match-results
  
  # ❌ Bad
  /api/playerStats
  /api/match_results
  ``` 