version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:16
    container_name: gullyguru-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-gullyguru}
    volumes:
      - pg_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  api:
    build:
      context: .
      dockerfile: Docker/Dockerfile.backend
    container_name: gullyguru-api
    depends_on:
      db:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/gullyguru
      - JWT_SECRET_KEY=your_secret_key_change_this_in_production
    ports:
      - "8000:8000"
    restart: unless-stopped

  # Telegram Bot
  bot:
    build:
      context: .
      dockerfile: Docker/Dockerfile.bot
    container_name: gullyguru-bot
    depends_on:
      - api
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - API_BASE_URL=http://api:8000
    restart: unless-stopped

  # Frontend
  frontend:
    build:
      context: .
      dockerfile: Docker/Dockerfile.frontend
    container_name: gullyguru-frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api
    restart: unless-stopped

volumes:
  pg_data: 